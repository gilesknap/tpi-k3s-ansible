apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-prometheus
  namespace: argo-cd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  project: kubernetes
  sources:
    - chart: kube-prometheus-stack
      targetRevision: 72.6.4
      repoURL:  https://prometheus-community.github.io/helm-charts
      helm:
        valuesObject:
          # https://github.dev/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

          grafana:
            # TODO switch to CAS
            adminPassword: notgood
            persistence:
              enabled: true
              type: sts
              storageClassName: longhorn
              accessModes:
                - ReadWriteOnce
              size: 30Gi
              finalizers:
                - kubernetes.io/pvc-protection

          prometheus:
            annotations:
              argocd.argoproj.io/skip-health-check: "true"
            prometheusSpec:
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: longhorn
                    accessModes:
                      - ReadWriteOnce
                    resources:
                      requests:
                        storage: 40Gi

    - path: ./kubernetes-services/additions/ingress
      repoURL: {{ .Values.repo_remote }}
      targetRevision: {{ .Values.repo_branch }}
      helm:
        valuesObject:
          name: grafana
          cluster_domain: {{ .Values.cluster_domain }}
          service_name: grafana-prometheus
          service_port: 3000
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    # see https://prometheus-operator.dev/docs/platform/troubleshooting/#customresourcedefinition--is-invalid-metadataannotations-too-long-issue
    - ServerSideApply=true
    - CreateNamespace=true
